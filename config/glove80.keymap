/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

// layers
#define DEFAULT 0
#define SYMBOLS 1
#define NUMBERS 2
#define MEDIA 3
#define MAGIC 4

// vars
#define COMBO_TERM 50
#define TAPPING_TERM 200

/ {
    behaviors {

        // Switch to a layer if a key is held
        lh: layer_hold {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <TAPPING_TERM>;
            bindings =  <&mo>, <&kp>;
            display-name = "Layer-Hold";
        };

        // Activate modifier if a key is held
        mh: mod_hold {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <TAPPING_TERM>;
            bindings =  <&kp>, <&kp>;
            display-name = "Mod-Hold";
        };

        shift: shift_caps {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <TAPPING_TERM>;
            bindings = <&kp LSHIFT>, <&kp CAPSLOCK>;
        };

        magic: magic_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "MAGIC_HOLD_TAP";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <TAPPING_TERM>;
            bindings = <&mo>, <&rgb_ug_status_macro>;
        };
    };

    combos {

        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <COMBO_TERM>;
            key-positions = <37 38>;
            bindings = <&kp ESC>;
            layers   =  <DEFAULT>;
        };

        combo_equal {
            timeout-ms = <COMBO_TERM>;
            key-positions = <41 42>;
            bindings = <&kp EQUAL>;
            layers   =  <DEFAULT>;
        };

        combo_plus {
            timeout-ms = <COMBO_TERM>;
            key-positions = <41 43>;
            bindings = <&kp PLUS>;
            layers   =  <DEFAULT>;
        };

        combo_minus {
            timeout-ms = <COMBO_TERM>;
            key-positions = <41 44>;
            bindings = <&kp MINUS>;
            layers   =  <DEFAULT>;
        };

        combo_mult {
            timeout-ms = <COMBO_TERM>;
            key-positions = <42 43>;
            bindings = <&kp ASTERISK>;
            layers   =  <DEFAULT>;
        };

        combo_div {
            timeout-ms = <COMBO_TERM>;
            key-positions = <42 44>;
            bindings = <&kp SLASH>;
            layers   =  <DEFAULT>;
        };
    };

    macros {
        rgb_ug_status_macro: rgb_ug_status_macro_0 {
            label = "RGB_UG_STATUS";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&rgb_ug RGB_STATUS>;
        };

        bt_0: bt_profile_macro_0 {
            label = "BT_0";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 0>;
        };

        bt_1: bt_profile_macro_1 {
            label = "BT_1";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 1>;
        };

        bt_2: bt_profile_macro_2 {
            label = "BT_2";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 2>;
        };

        bt_3: bt_profile_macro_3 {
            label = "BT_3";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
            &kp F1                      &kp F2          &kp F3      &kp F4      &kp F5                                                                                                            &kp F6                &kp F7      &kp F8      &kp F9                 &kp F10
            &kp LG(LA(LC(LSHIFT)))      &kp N1          &kp N2      &kp N3      &kp N4              &kp N5                                                                                &kp N6  &kp N7                &kp N8      &kp N9      &kp N0                 &kp MINUS
            &kp LG(LSHIFT)              &kp Q           &kp W       &kp E       &kp R               &kp T                                                                                 &kp Y   &kp U                 &kp I       &kp O       &kp P                  &kp BSLH
            &kp LMETA                   &mh LEFT_ALT A  &kp S       &kp D       &mh LEFT_CONTROL F  &kp G                                                                                 &kp H   &mh RIGHT_CONTROL J   &kp K       &kp L       &mh RIGHT_ALT SEMI     &kp SQT
            &kp LG(LALT)                &kp Z           &kp X       &kp C       &lh NUMBERS V       &kp B      &shift      &kp LCTRL   &kp INSERT   &kp ESCAPE  &kp RCTRL   &kp RSHFT     &kp N   &lh SYMBOLS M         &kp COMMA   &kp DOT     &kp FSLH               &kp PG_UP
            &magic MAGIC 0              &lh MEDIA HOME  &kp END     &kp LEFT    &kp RIGHT                      &kp SPACE   &kp RET     &kp TAB      &kp RALT    &kp DEL     &kp BSPC              &kp UP                &kp DOWN    &kp LBKT    &kp RBKT               &kp PG_DN
            >;
        };

        symbols_layer {
            bindings = <
            &trans            &trans              &trans          &trans                    &trans                                                                                                                   &trans  &trans         &trans      &trans  &trans
            &trans            &trans              &trans          &trans                    &trans                    &trans                                                                                &trans   &trans  &trans         &trans      &trans  &trans
            &trans            &kp EXCLAMATION     &kp CARET       &kp LEFT_BRACE            &kp RIGHT_BRACE           &kp TILDE                                                                             &none    &none   &none          &none       &none   &none
            &trans            &kp AT_SIGN         &kp DOLLAR      &kp LEFT_PARENTHESIS      &kp RIGHT_PARENTHESIS     &kp GRAVE                                                                             &none    &none   &kp BACKSLASH  &kp PIPE    &none   &none
            &trans            &kp PERCENT         &kp AMPERSAND   &kp LEFT_BRACKET          &kp RIGHT_BRACKET         &kp HASH       &trans      &trans      &trans      &trans      &trans     &trans      &none    &none   &none          &none       &none   &none
            &none             &none               &none           &trans                    &trans                                   &trans      &trans      &trans      &trans      &trans     &trans               &trans  &none          &none       &none   &none
            >;
        };

        numbers_layer {
            bindings = <
            &trans            &trans              &trans                    &trans                  &trans                                                                                                              &trans     &trans     &trans      &trans   &trans
            &trans            &trans              &trans                    &trans                  &trans          &trans                                                                            &trans            &trans     &trans     &trans      &trans   &trans
            &trans            &kp  SLASH          &kp LEFT_PARENTHESIS      &kp RIGHT_PARENTHESIS   &none           &none                                                                             &kp ASTERISK      &kp PLUS   &kp MINUS  &kp EQUAL   &none    &none
            &trans            &kp PERIOD          &kp COMMA                 &kp UNDERSCORE          &none           &none                                                                             &kp N0            &kp N1     &kp N2     &kp N3      &kp N4   &none
            &trans            &none               &none                     &none                   &none           &none       &trans      &trans      &trans      &trans      &trans      &trans    &kp N5            &kp N6     &kp N7     &kp N8      &kp N9   &none
            &none             &none               &none                     &trans                  &trans                      &trans      &trans      &trans      &trans      &trans      &trans                      &trans     &trans     &none       &none    &none
            >;
        };

        media_layer {
            bindings = <
            &trans            &none               &none                     &none                   &none                                                                                                        &none                &none             &none           &none              &none   
            &trans            &none               &none                     &none                   &none           &none                                                                  &none                 &none                &none             &none           &none              &none
            &trans            &none               &none                     &none                   &none           &none                                                                  &none                 &none                &none             &none           &kp C_PLAY_PAUSE   &none
            &trans            &none               &none                     &none                   &none           &none                                                                  &kp C_FAST_FORWARD    &kp C_VOLUME_DOWN    &kp C_VOLUME_UP   &kp C_REWIND    &none              &none
            &trans            &none               &none                     &none                   &none           &none       &none      &none      &none      &none      &none          &none                 &kp C_MUTE           &none             &none           &none              &none
            &none             &none               &none                     &none                   &none                       &none      &none      &none      &none      &none                                &none                &none             &none           &none              &none
            >;
        };

        magic_layer {
            bindings = <
            &bt BT_CLR        &none               &none           &none           &none                                                                                                           &none      &none      &none      &none      &bt BT_CLR_ALL
            &none             &none               &none           &none           &none           &none                                                                                &none      &none      &none      &none      &none      &none
            &none             &rgb_ug RGB_SPI     &rgb_ug RGB_SAI &rgb_ug RGB_HUI &rgb_ug RGB_BRI &rgb_ug RGB_TOG                                                                      &none      &none      &none      &none      &none      &none
            &bootloader       &rgb_ug RGB_SPD     &rgb_ug RGB_SAD &rgb_ug RGB_HUD &rgb_ug RGB_BRD &rgb_ug RGB_EFF                                                                      &none      &none      &none      &none      &none      &bootloader
            &sys_reset        &none               &none           &none           &none           &none           &bt_2     &bt_3     &none            &none     &none     &none       &none      &none      &none      &none      &none      &sys_reset
            &none             &none               &none           &none           &none                           &bt_0     &bt_1     &out OUT_USB     &none     &none     &none                  &none      &none      &none      &none      &none
            >;
        };
    };
};
